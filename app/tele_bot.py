import telebot
from telebot import types
from keys import token, azil, asilisav, admin_user_ids
from worker_db import read_tele_user, add_tele_user, add_chatgpt_setings, add_new_session_data
import asyncio
from open_ai import main

bot = telebot.TeleBot(token) # Conection for API Telegram

# /start
@bot.message_handler(commands=['start'])
def start(context):
    #print(admin_user_ids)
    #print(context.from_user.id)
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–¥–µ –µ—Å—Ç—å –∏–º—è —É –¢–µ–ª–µ–≥–∞—Ä–º –ø–æ–ª—å–∑-–ª—è
    if int(context.from_user.id) == int(azil) or int(context.from_user.id) == int(asilisav):
        about = "–¥–æ—á–µ–Ω—å–∫–∞ –æ—Ç –ø–∞–ø—ã"
    if int(context.from_user.id) == int(admin_user_ids):
        about = "–±—Ä–æ–æ–æ–æ–æ"
    elif context.from_user.username:
        about = context.from_user.username
    elif context.from_user.first_name:
        about = context.from_user.first_name
    elif context.from_user.last_name:
        about = context.from_user.last_name
    else:
        about = "–¥—Ä—É–≥"
    # –í—ã–≤–æ–¥–∏–º –ø—Ä–∏–≤–µ—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.send_message(context.chat.id, text=f"–ü—Ä–∏–≤–µ—Ç {about}! –ú–Ω–µ –º–æ–∂–Ω–æ —Å—Ä–∞–∑—É –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ —Å–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å - /setup.")
    user_id = context.from_user.id # –¢–µ–ª–µ–≥—Ä–∞–º id –Ω–∞–∂–∞–≤—à–µ–≥–æ —Å—Ç–∞—Ä—Ç
    read_id = read_tele_user(user_id) # –°—á–∏—Ç—ã–≤–∞–µ–º –≤ –±–∞–∑–µ —Å —Ç–∞–∫–∏–º id –≤—Å–µ –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
    # user_id_1, user_username_1, user_db_id_1 = read_id # –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–≤–ª–µ—á—å –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–æ—Ä—Ç–µ–∂–∞
    # print(user_id_1)
    # –ï—Å–ª–∏ –≤ –±–∞–∑–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ id —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º
    if read_id == None:
        add_tele_user(context.from_user.id, context.from_user.username, context.from_user.first_name, context.from_user.last_name)
        ##### –ü–æ–∑–∂–µ –æ–±—ä–µ–¥–µ–Ω–∏—Ç—å —è –º–æ–≥—É –ø–æ–ª—É—á–∏—Ç—å user_id –ø—Ä—è–º–æ —Ç–∞–º –∏ —Ç–∞–º –∂–µ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å ##### 
        # –í—ã—á–∏—Ç—ã–≤–∞—é –∏–∑ —Ç–∞–±–ª–∏—Ü—ã UserTelegram —Ç–æ–ª—å–∫–æ —á—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ id —Å–ª–µ–¥—É—é–µ—Ç 4—ã–º –≤ –∫–æ—Ä—Ç–µ–∂–µ
        added_user_id = read_tele_user(user_id)[4] # –ü–æ–ª—É—á–∏–ª–∏ id —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤–Ω–µ—Å–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        add_chatgpt_setings(added_user_id) # –í–Ω–æ—Å–∏–º id –≤ —Ç–∞–±–ª–∏—Ü—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ gpt, –Ω—É–∂–Ω–æ–µ –ø—Ä–æ—Å—Ç–∞–≤–∏—Ç—å—Å—è –ø–æ default
        add_new_session_data(added_user_id) # –í–Ω–æ—Å–∏–º id –≤ —Ç–∞–±–ª–∏—Ü—É SavedQuestion, –Ω—É–∂–Ω–æ–µ –ø—Ä–æ—Å—Ç–∞–≤–∏—Ç—å—Å—è –ø–æ default
        ##### –ü–æ–∑–∂–µ –æ–±—ä–µ–¥–µ–Ω–∏—Ç—å —è –º–æ–≥—É –ø–æ–ª—É—á–∏—Ç—å user_id –ø—Ä—è–º–æ —Ç–∞–º –∏ —Ç–∞–º –∂–µ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å ##### 

# # /admin - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç, –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å –±–∞–∑—ã, —Ç–æ–∫–µ–Ω—ã..
# @bot.message_handler(commands=['admin'])
# def start(context): 


# Message from OpenAI
@bot.message_handler(func=lambda message: message.text is not None and not message.text.startswith('/')) # –î–µ–∫–æ—Ä–∞—Ç–æ—Ä Telebot –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—Å–µ, –∫—Ä–æ–º–µ —Ç–æ–≥–æ, —á—Ç–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ /
def handle_message(message):
    bot.send_chat_action(message.chat.id, 'typing') # Typing bot

    user_id = message.from_user.id # –¢–µ–ª–µ–≥—Ä–∞–º id –Ω–∞—á–∞–≤—à–µ–≥–æ –¥–∏–∞–ª–æ–≥
    id_all = read_tele_user(user_id)# –í—Å—è —Å—Ç—Ä–æ–∫–∞ –ø–æ id –≤ —Ç–∞–±–ª–∏—Ü–µ Users Telegram
    if id_all == None:
        start(message) # –ï—Å–ª–∏ –ø–æ—á–µ–º—É —Ç–æ –Ω–µ –Ω–∞–∂–∞–ª /start, –Ω–∞–∂–∏–º–∞–µ–º
        print("This User ID is None in DB. Automatically add.") # raise ValueError("ID is None. Program stopped. So Soory bro.") - –∂–µ—Å—Ç–∫–æ –≤—ã–π–¥–µ—Ç –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã
    id_all = read_tele_user(user_id)# –í—Å—è —Å—Ç—Ä–æ–∫–∞ –ø–æ id –≤ —Ç–∞–±–ª–∏—Ü–µ Users Telegram
    id = id_all[4] # id 4 –ø–æ —Å—á–µ—Ç—É –≤ –∫–æ—Ä—Ç–µ–∂–µ

    async def run_main():
        bot.send_chat_action(message.chat.id, 'typing') # Typing bot
        result = await main(message.text, id)
        send = f"{result[0]}\n- - - - - - - - - - - - - - - - - - - - - - - - - -\n–í–µ—Ä—Å–∏—è –º–æ–¥–µ–ª–∏: {result[1]}\n–¢–æ–∫. –≤–æ–ø—Ä–æ—Å + –æ—Ç–≤–µ—Ç: {result[4]}\n–¢–æ–∫–µ–Ω–æ–≤ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: {result[5]}\n–¢–æ–∫–µ–Ω–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å: {result[6]}" #–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã: {result[2]}\n–ü–æ–¥—Å–∫–∞–∑–∫–∏ —Ç–æ–∫–µ–Ω—ã: {result[3]}\n–í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤: {result[4]}"
        # send = f"{–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è}\n<b>–ñ–∏—Ä–Ω—ã–º - b</b> <i>–ö—É—Ä—Å–∏–≤ - i</i> <code>–ö–æ–¥ - code</code> <pre>–û—Ç–¥–µ–ª—å–Ω—ã–π –±–ª–æ–∫ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è - pre</pre>"
        bot.reply_to(message, send) # bot.reply_to(message, send, parse_mode='HTML')
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    loop.run_until_complete(run_main())


# –í—ã–∑–æ–≤ –º–µ–Ω—é /setup
# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
#flag_menu = False

@bot.message_handler(commands=['setup'])
def main_menu(message):
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    version_chat = types.InlineKeyboardButton(text="–ú–æ–¥–µ–ª—å ChatGPT ü¶æ", callback_data="version_chat")
    version_dialog = types.InlineKeyboardButton(text="–í—Ä–µ–º—è –ø–∞–º—è—Ç–∏ üó£", callback_data="mode_dialog")
    #version_creativity = types.InlineKeyboardButton(text="–£—Ä–æ–≤–µ–Ω—å —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ üëª", callback_data="level_creativity")
    response_volume = types.InlineKeyboardButton(text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üëª", callback_data="response_volume")
    close_menu_button = types.InlineKeyboardButton(text="–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é ‚úñÔ∏è", callback_data="close_menu")
    keyboard.add(version_chat, version_dialog, response_volume, close_menu_button)
    #if flag_menu == False:
    bot.send_message(message.chat.id, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ChatGPT:", reply_markup=keyboard)
        #flag_menu = True
    #else:
        #breakpoint
        #bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä—Å–∏—é ChatGPT:", reply_markup=keyboard)


















#####
start_bot = bot.polling() # –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –≤ run_bot.py














    # user_id = context.from_user.id
    # user_first_name = context.from_user.first_name  # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # user_last_name = context.from_user.last_name  # –§–∞–º–∏–ª–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–º–æ–∂–µ—Ç –±—ã—Ç—å None)
    # user_username = context.from_user.username  # –Æ–∑–µ—Ä–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–º–æ–∂–µ—Ç –±—ã—Ç—å None)
    # chat_id = context.chat.id



